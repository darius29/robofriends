{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filtredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAmBeA,EAhBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cAErB,gCACI,6BAAKF,IACL,4BAAIC,WCULK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACA,8BACIA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKEC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAChBW,KAAK,SACJC,YAAY,gBACZC,SAAYH,OCEPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YC8CJC,G,wDAzCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAS3C,WAAS,IAAD,EAC2BC,KAAKN,MAA5BvB,EADJ,EACIA,OAAQK,EADZ,EACYA,YACVyB,EAAgB9B,EAAO+B,QAAQ,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OAAQjC,EAAOmC,OAIP,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ8B,SAPrB,oBAAIlC,UAAU,KAAd,yB,GA5BKwC,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAK3BX,M","file":"static/js/main.8e1fdc44.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n   \r\n    return (\r\n        \r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?100x100`} />\r\n\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    \r\n    return (\r\n    <div>\r\n       {robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n        key={i} \r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email} />\r\n        );\r\n    })}\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue'\r\n         type='search'\r\n          placeholder='search robots' \r\n          onChange = {searchChange}\r\n              \r\n          />\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '' \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event)=> {\r\n        this.setState({searchfield: event.target.value})\r\n       \r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield} = this.state;\r\n        const filtredRobots = robots.filter( robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n             <h1 className=\"tc\">Loading</h1> :\r\n        \r\n             (\r\n                <div className=\"tc\">\r\n                <h1 className=\"f1\"> RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                <CardList robots={filtredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n            )\r\n        } \r\n    }\r\n    \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />\n  ,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}